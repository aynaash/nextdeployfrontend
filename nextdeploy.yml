
version: "1.0" # ⚠️ Do NOT change unless you change field meanings, format, or logic.

# ==================================================
# APP METADATA
# ==================================================
app:
  name: nextdeploy # Used for naming containers, logs, dashboards, etc.
  environment: production # One of: development | staging | production
  domain: https://www.nextdeploy.one # Public URL your app is accessible on
  port: 3000 # Internal port the app server listens on (not exposed directly)

# ==================================================
# GIT SOURCE CONFIGURATION
# ==================================================
repository:
  url: git@github.com:username/example-app.git # Must be accessible from deployer
  branch: main
  auto_deploy: true # Enable webhook-triggered CI/CD
  webhook_secret: your_webhook_secret # Used to verify webhook origin

# ==================================================
# CONTAINER BUILD & REGISTRY CONFIG
# ==================================================
docker:
  build:
    context: . # Usually root of repo
    dockerfile: Dockerfile
    args:
      NODE_ENV: production
    no_cache: false # Force rebuilds (good for CI, bad for caching)
  image: hersiyussuf/nextdeploy
  registry: registry.digitalocean.com/hersi
  push: true
  username: hersiyussuf
  password: dckr_pat_H8xP4EPpj4_zKE91zKnInqXh010

# ==================================================
# INFRASTRUCTURE / SERVER TARGETS
# ==================================================
servers:
  - name: production # Unique ID (used for logs, filtering, routing)
    host: 51.20.134.163
    username: ubuntu
    ssh_key: ~/.ssh/nextdeploy-key.pem
    key_path: "/home/elitebook/.ssh/nextdeploy-key.pem"
    use_sudo: false

    webserver:
      type: caddy # Could be nginx, apache, caddy, etc.
      config_path: /etc/caddy/Caddyfile # Path to webserver config file 
      enabled: true # Enable this server block
      ssl_enabled: true # Use SSL for this server block
      ssl_cert_path: /etc/letsencrypt/live/nextdeploy.one/fullchain.pem
      ssl_key_path: /etc/letsencrypt/live/nextdeploy.one/privkey.pem

    container:
      name: nextdeploy
      restart: always
      env_file: .env
      volumes:
        - ./data:/app/data
      ports:
        - "80:3000"
      healthcheck:
        path: /api/health
        interval: 30s
        timeout: 5s
        retries: 3

# ✅ Teaching:
# Move this out of docker because:
# 1. Docker is the build + push concern.
# 2. Servers are runtime infra concerns.
# 3. Daemons like ship, failover, and monitor depend on accurate server declarations.

# ==================================================
# DATABASE CONFIGURATION
# ==================================================
database:
  type: postgres
  host: 192.0.2.124
  port: 5432
  username: dbuser
  password: secret
  name: exampledb
  migrate_on_deploy: true

# Teaching:
# Database should be fully managed externally. Don’t run DB in the same container — you want container failure to be isolated from data integrity.

# ==================================================
# LOGGING CONFIGURATION
# ==================================================
logging:
  enabled: true
  provider: nextdeploy # Could later support: syslog, logtail, datadog, etc.
  stream_logs: true
  log_path: /var/log/containers/nextdeploy.log

# ==================================================
# MONITORING & ALERTING CONFIG
# ==================================================
monitoring:
  enabled: true
  cpu_threshold: 80
  memory_threshold: 75
  disk_threshold: 90
  alert:
    email: ops@example.com
    slack_webhook: https://hooks.slack.com/services/...
    notify_on:
      - crash
      - healthcheck_failed
      - high_cpu
      - high_memory

# Teaching:
# This will integrate with the monitor daemon. Future version: consider window_duration, cooldown_period, alert_frequency.

# ==================================================
# BACKUP CONFIGURATION
# ==================================================
backup:
  enabled: true
  frequency: daily
  retention_days: 7
  storage:
    provider: s3
    bucket: nextdeploy-backups
    region: us-east-1
    access_key: YOUR_ACCESS_KEY
    secret_key: YOUR_SECRET_KEY

# Teaching:g
# You're backing up volume and DB snapshots. Make sure you version them and don’t overwrite blindly.

# ==================================================
# SSL / HTTPS CONFIG
# ==================================================
domain: nextdeploy.one
email: yussufhersi219@gmail.com
staging: false
wildcard: true
dns_provider: namecheap
force: false
ssl:
  domain: nextdeploy.one
  email: yussufhersi219@gmail.com
  staging: false
  wildcard: true
  dns_provider: namecheap
  force: false
  enabled: true
  provider: letsencrypt
  auto_renew: true
# Teaching:
# When SSL is enabled, certbot or equivalent should be run on the server. Ideally daemonized + log-monitored.

# ==================================================
# POST-DEPLOY WEBHOOKS
# ==================================================
webhook:
  on_success:
    - curl -X POST https://your-api.com/deploy/success
  on_failure:
    - curl -X POST https://your-api.com/deploy/failure

# Teaching:
# Great for chaining environments. Success webhook → notify QA or trigger end-to-end test suite.
deployment:
  server:
    host: 51.20.134.163 # Must match one of your servers' host
  container:
    name: nextdeploy
    restart: always
    ports:
      - "80:3000"
