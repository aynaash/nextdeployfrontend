"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getServiceComponentOutput = exports.getServiceComponent = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * The Service Component data source provides information about the existing Aiven service Component.
 *
 * Service components can be defined to get the connection info for specific service. Services may support multiple different access routes (VPC peering and public access), have additional components or support various authentication methods. Each of these may be represented by different DNS name or TCP port and the specific component to match can be selected by specifying appropriate filters as shown below.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aiven from "@pulumi/aiven";
 *
 * const sc1 = aiven.getServiceComponent({
 *     project: aiven_kafka.project1.project,
 *     serviceName: aiven_kafka.service1.service_name,
 *     component: "kafka",
 *     route: "dynamic",
 *     kafkaAuthenticationMethod: "certificate",
 * });
 * ```
 */
function getServiceComponent(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aiven:index/getServiceComponent:getServiceComponent", {
        "component": args.component,
        "kafkaAuthenticationMethod": args.kafkaAuthenticationMethod,
        "project": args.project,
        "route": args.route,
        "serviceName": args.serviceName,
        "ssl": args.ssl,
        "usage": args.usage,
    }, opts);
}
exports.getServiceComponent = getServiceComponent;
/**
 * The Service Component data source provides information about the existing Aiven service Component.
 *
 * Service components can be defined to get the connection info for specific service. Services may support multiple different access routes (VPC peering and public access), have additional components or support various authentication methods. Each of these may be represented by different DNS name or TCP port and the specific component to match can be selected by specifying appropriate filters as shown below.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aiven from "@pulumi/aiven";
 *
 * const sc1 = aiven.getServiceComponent({
 *     project: aiven_kafka.project1.project,
 *     serviceName: aiven_kafka.service1.service_name,
 *     component: "kafka",
 *     route: "dynamic",
 *     kafkaAuthenticationMethod: "certificate",
 * });
 * ```
 */
function getServiceComponentOutput(args, opts) {
    return pulumi.output(args).apply((a) => getServiceComponent(a, opts));
}
exports.getServiceComponentOutput = getServiceComponentOutput;
//# sourceMappingURL=getServiceComponent.js.map