"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.AccountAuthentication = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * The Account Authentication resource allows the creation and management of an Aiven Account Authentications.
 *
 * ## Import
 *
 * ```sh
 *  $ pulumi import aiven:index/accountAuthentication:AccountAuthentication foo account_id/authentication_id
 * ```
 */
class AccountAuthentication extends pulumi.CustomResource {
    /**
     * Get an existing AccountAuthentication resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new AccountAuthentication(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of AccountAuthentication.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AccountAuthentication.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["authenticationId"] = state ? state.authenticationId : undefined;
            resourceInputs["autoJoinTeamId"] = state ? state.autoJoinTeamId : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["samlAcsUrl"] = state ? state.samlAcsUrl : undefined;
            resourceInputs["samlCertificate"] = state ? state.samlCertificate : undefined;
            resourceInputs["samlDigestAlgorithm"] = state ? state.samlDigestAlgorithm : undefined;
            resourceInputs["samlEntityId"] = state ? state.samlEntityId : undefined;
            resourceInputs["samlFieldMapping"] = state ? state.samlFieldMapping : undefined;
            resourceInputs["samlIdpLoginAllowed"] = state ? state.samlIdpLoginAllowed : undefined;
            resourceInputs["samlIdpUrl"] = state ? state.samlIdpUrl : undefined;
            resourceInputs["samlMetadataUrl"] = state ? state.samlMetadataUrl : undefined;
            resourceInputs["samlSignatureAlgorithm"] = state ? state.samlSignatureAlgorithm : undefined;
            resourceInputs["samlVariant"] = state ? state.samlVariant : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.accountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["autoJoinTeamId"] = args ? args.autoJoinTeamId : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["samlCertificate"] = args ? args.samlCertificate : undefined;
            resourceInputs["samlDigestAlgorithm"] = args ? args.samlDigestAlgorithm : undefined;
            resourceInputs["samlEntityId"] = args ? args.samlEntityId : undefined;
            resourceInputs["samlFieldMapping"] = args ? args.samlFieldMapping : undefined;
            resourceInputs["samlIdpLoginAllowed"] = args ? args.samlIdpLoginAllowed : undefined;
            resourceInputs["samlIdpUrl"] = args ? args.samlIdpUrl : undefined;
            resourceInputs["samlSignatureAlgorithm"] = args ? args.samlSignatureAlgorithm : undefined;
            resourceInputs["samlVariant"] = args ? args.samlVariant : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["authenticationId"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["samlAcsUrl"] = undefined /*out*/;
            resourceInputs["samlMetadataUrl"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AccountAuthentication.__pulumiType, name, resourceInputs, opts);
    }
}
exports.AccountAuthentication = AccountAuthentication;
/** @internal */
AccountAuthentication.__pulumiType = 'aiven:index/accountAuthentication:AccountAuthentication';
//# sourceMappingURL=accountAuthentication.js.map