import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
/**
 * The Project resource allows the creation and management of Aiven Projects.
 *
 * ## Import
 *
 * ```sh
 *  $ pulumi import aiven:index/project:Project myproject project
 * ```
 */
export declare class Project extends pulumi.CustomResource {
    /**
     * Get an existing Project resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ProjectState, opts?: pulumi.CustomResourceOptions): Project;
    /**
     * Returns true if the given object is an instance of Project.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Project;
    /**
     * An optional property to link a project to already an existing account by using account ID. To set up proper dependencies please refer to this variable as a reference.
     */
    readonly accountId: pulumi.Output<string | undefined>;
    /**
     * If accountId is set, grant account owner team admin access to the new project. The default value is `true`.
     */
    readonly addAccountOwnersAdminAccess: pulumi.Output<boolean | undefined>;
    /**
     * The amount of platform credits available to the project. This could be your free trial or other promotional credits.
     */
    readonly availableCredits: pulumi.Output<string>;
    /**
     * The id of the billing group that is linked to this project. To set up proper dependencies please refer to this variable as a reference.
     */
    readonly billingGroup: pulumi.Output<string | undefined>;
    /**
     * The CA certificate of the project. This is required for configuring clients that connect to certain services like Kafka.
     */
    readonly caCert: pulumi.Output<string>;
    /**
     * is the name of another project used to copy billing information and some other project attributes like technical contacts from. This is mostly relevant when an existing project has billing type set to invoice and that needs to be copied over to a new project. (Setting billing is otherwise not allowed over the API.) This only has effect when the project is created. To set up proper dependencies please refer to this variable as a reference.
     */
    readonly copyFromProject: pulumi.Output<string | undefined>;
    /**
     * Defines the default cloud provider and region where services are hosted. This can be changed freely after the project is created. This will not affect existing services.
     */
    readonly defaultCloud: pulumi.Output<string | undefined>;
    /**
     * The current accumulated bill for this project in the current billing period.
     */
    readonly estimatedBalance: pulumi.Output<string>;
    /**
     * The method of invoicing used for payments for this project, e.g. `card`.
     */
    readonly paymentMethod: pulumi.Output<string>;
    /**
     * Defines the name of the project. Name must be globally unique (between all Aiven customers) and cannot be changed later without destroying and re-creating the project, including all sub-resources.
     */
    readonly project: pulumi.Output<string>;
    /**
     * Tags are key-value pairs that allow you to categorize projects.
     */
    readonly tags: pulumi.Output<outputs.ProjectTag[] | undefined>;
    /**
     * Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service instability. It is  good practice to keep this up-to-date to be aware of any potential issues with your project.
     */
    readonly technicalEmails: pulumi.Output<string[] | undefined>;
    /**
     * Use the same billing group that is used in source project.
     */
    readonly useSourceProjectBillingGroup: pulumi.Output<boolean | undefined>;
    /**
     * Create a Project resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ProjectArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering Project resources.
 */
export interface ProjectState {
    /**
     * An optional property to link a project to already an existing account by using account ID. To set up proper dependencies please refer to this variable as a reference.
     */
    accountId?: pulumi.Input<string>;
    /**
     * If accountId is set, grant account owner team admin access to the new project. The default value is `true`.
     */
    addAccountOwnersAdminAccess?: pulumi.Input<boolean>;
    /**
     * The amount of platform credits available to the project. This could be your free trial or other promotional credits.
     */
    availableCredits?: pulumi.Input<string>;
    /**
     * The id of the billing group that is linked to this project. To set up proper dependencies please refer to this variable as a reference.
     */
    billingGroup?: pulumi.Input<string>;
    /**
     * The CA certificate of the project. This is required for configuring clients that connect to certain services like Kafka.
     */
    caCert?: pulumi.Input<string>;
    /**
     * is the name of another project used to copy billing information and some other project attributes like technical contacts from. This is mostly relevant when an existing project has billing type set to invoice and that needs to be copied over to a new project. (Setting billing is otherwise not allowed over the API.) This only has effect when the project is created. To set up proper dependencies please refer to this variable as a reference.
     */
    copyFromProject?: pulumi.Input<string>;
    /**
     * Defines the default cloud provider and region where services are hosted. This can be changed freely after the project is created. This will not affect existing services.
     */
    defaultCloud?: pulumi.Input<string>;
    /**
     * The current accumulated bill for this project in the current billing period.
     */
    estimatedBalance?: pulumi.Input<string>;
    /**
     * The method of invoicing used for payments for this project, e.g. `card`.
     */
    paymentMethod?: pulumi.Input<string>;
    /**
     * Defines the name of the project. Name must be globally unique (between all Aiven customers) and cannot be changed later without destroying and re-creating the project, including all sub-resources.
     */
    project?: pulumi.Input<string>;
    /**
     * Tags are key-value pairs that allow you to categorize projects.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.ProjectTag>[]>;
    /**
     * Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service instability. It is  good practice to keep this up-to-date to be aware of any potential issues with your project.
     */
    technicalEmails?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Use the same billing group that is used in source project.
     */
    useSourceProjectBillingGroup?: pulumi.Input<boolean>;
}
/**
 * The set of arguments for constructing a Project resource.
 */
export interface ProjectArgs {
    /**
     * An optional property to link a project to already an existing account by using account ID. To set up proper dependencies please refer to this variable as a reference.
     */
    accountId?: pulumi.Input<string>;
    /**
     * If accountId is set, grant account owner team admin access to the new project. The default value is `true`.
     */
    addAccountOwnersAdminAccess?: pulumi.Input<boolean>;
    /**
     * The amount of platform credits available to the project. This could be your free trial or other promotional credits.
     */
    availableCredits?: pulumi.Input<string>;
    /**
     * The id of the billing group that is linked to this project. To set up proper dependencies please refer to this variable as a reference.
     */
    billingGroup?: pulumi.Input<string>;
    /**
     * is the name of another project used to copy billing information and some other project attributes like technical contacts from. This is mostly relevant when an existing project has billing type set to invoice and that needs to be copied over to a new project. (Setting billing is otherwise not allowed over the API.) This only has effect when the project is created. To set up proper dependencies please refer to this variable as a reference.
     */
    copyFromProject?: pulumi.Input<string>;
    /**
     * Defines the default cloud provider and region where services are hosted. This can be changed freely after the project is created. This will not affect existing services.
     */
    defaultCloud?: pulumi.Input<string>;
    /**
     * Defines the name of the project. Name must be globally unique (between all Aiven customers) and cannot be changed later without destroying and re-creating the project, including all sub-resources.
     */
    project: pulumi.Input<string>;
    /**
     * Tags are key-value pairs that allow you to categorize projects.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.ProjectTag>[]>;
    /**
     * Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service instability. It is  good practice to keep this up-to-date to be aware of any potential issues with your project.
     */
    technicalEmails?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Use the same billing group that is used in source project.
     */
    useSourceProjectBillingGroup?: pulumi.Input<boolean>;
}
