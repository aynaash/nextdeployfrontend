import * as pulumi from "@pulumi/pulumi";
/**
 * The Service User resource allows the creation and management of Aiven Service Users.
 *
 * > **Note:** This resource is deprecated. Please use service-specific resources instead of this one, for example: aiven_kafka_user, aiven.PgUser etc.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aiven from "@pulumi/aiven";
 *
 * const myserviceuser = new aiven.ServiceUser("myserviceuser", {
 *     project: aiven_project.myproject.project,
 *     serviceName: aiven_pg.mypg.service_name,
 *     username: "<USERNAME>",
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 *  $ pulumi import aiven:index/serviceUser:ServiceUser myserviceuser project/service_name/username
 * ```
 */
export declare class ServiceUser extends pulumi.CustomResource {
    /**
     * Get an existing ServiceUser resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServiceUserState, opts?: pulumi.CustomResourceOptions): ServiceUser;
    /**
     * Returns true if the given object is an instance of ServiceUser.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ServiceUser;
    /**
     * Access certificate for the user if applicable for the service in question
     */
    readonly accessCert: pulumi.Output<string>;
    /**
     * Access certificate key for the user if applicable for the service in question
     */
    readonly accessKey: pulumi.Output<string>;
    /**
     * Authentication details. The possible values are `cachingSha2Password` and `mysqlNativePassword`.
     */
    readonly authentication: pulumi.Output<string | undefined>;
    /**
     * The password of the service user ( not applicable for all services ).
     */
    readonly password: pulumi.Output<string>;
    /**
     * Postgres specific field, defines whether replication is allowed. This property cannot be changed, doing so forces recreation of the resource.
     */
    readonly pgAllowReplication: pulumi.Output<boolean | undefined>;
    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    readonly project: pulumi.Output<string>;
    /**
     * Redis specific field, defines command category rules. The field is required with`redisAclCommands` and `redisAclKeys`. This property cannot be changed, doing so forces recreation of the resource.
     */
    readonly redisAclCategories: pulumi.Output<string[] | undefined>;
    /**
     * Redis specific field, defines the permitted pub/sub channel patterns. This property cannot be changed, doing so forces recreation of the resource.
     */
    readonly redisAclChannels: pulumi.Output<string[] | undefined>;
    /**
     * Redis specific field, defines rules for individual commands. The field is required with`redisAclCategories` and `redisAclKeys`. This property cannot be changed, doing so forces recreation of the resource.
     */
    readonly redisAclCommands: pulumi.Output<string[] | undefined>;
    /**
     * Redis specific field, defines key access rules. The field is required with`redisAclCategories` and `redisAclKeys`. This property cannot be changed, doing so forces recreation of the resource.
     */
    readonly redisAclKeys: pulumi.Output<string[] | undefined>;
    /**
     * Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    readonly serviceName: pulumi.Output<string>;
    /**
     * Type of the user account. Tells wether the user is the primary account or a regular account.
     */
    readonly type: pulumi.Output<string>;
    /**
     * The actual name of the service user. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    readonly username: pulumi.Output<string>;
    /**
     * Create a ServiceUser resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServiceUserArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ServiceUser resources.
 */
export interface ServiceUserState {
    /**
     * Access certificate for the user if applicable for the service in question
     */
    accessCert?: pulumi.Input<string>;
    /**
     * Access certificate key for the user if applicable for the service in question
     */
    accessKey?: pulumi.Input<string>;
    /**
     * Authentication details. The possible values are `cachingSha2Password` and `mysqlNativePassword`.
     */
    authentication?: pulumi.Input<string>;
    /**
     * The password of the service user ( not applicable for all services ).
     */
    password?: pulumi.Input<string>;
    /**
     * Postgres specific field, defines whether replication is allowed. This property cannot be changed, doing so forces recreation of the resource.
     */
    pgAllowReplication?: pulumi.Input<boolean>;
    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    project?: pulumi.Input<string>;
    /**
     * Redis specific field, defines command category rules. The field is required with`redisAclCommands` and `redisAclKeys`. This property cannot be changed, doing so forces recreation of the resource.
     */
    redisAclCategories?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Redis specific field, defines the permitted pub/sub channel patterns. This property cannot be changed, doing so forces recreation of the resource.
     */
    redisAclChannels?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Redis specific field, defines rules for individual commands. The field is required with`redisAclCategories` and `redisAclKeys`. This property cannot be changed, doing so forces recreation of the resource.
     */
    redisAclCommands?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Redis specific field, defines key access rules. The field is required with`redisAclCategories` and `redisAclKeys`. This property cannot be changed, doing so forces recreation of the resource.
     */
    redisAclKeys?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    serviceName?: pulumi.Input<string>;
    /**
     * Type of the user account. Tells wether the user is the primary account or a regular account.
     */
    type?: pulumi.Input<string>;
    /**
     * The actual name of the service user. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    username?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a ServiceUser resource.
 */
export interface ServiceUserArgs {
    /**
     * Authentication details. The possible values are `cachingSha2Password` and `mysqlNativePassword`.
     */
    authentication?: pulumi.Input<string>;
    /**
     * The password of the service user ( not applicable for all services ).
     */
    password?: pulumi.Input<string>;
    /**
     * Postgres specific field, defines whether replication is allowed. This property cannot be changed, doing so forces recreation of the resource.
     */
    pgAllowReplication?: pulumi.Input<boolean>;
    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    project: pulumi.Input<string>;
    /**
     * Redis specific field, defines command category rules. The field is required with`redisAclCommands` and `redisAclKeys`. This property cannot be changed, doing so forces recreation of the resource.
     */
    redisAclCategories?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Redis specific field, defines the permitted pub/sub channel patterns. This property cannot be changed, doing so forces recreation of the resource.
     */
    redisAclChannels?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Redis specific field, defines rules for individual commands. The field is required with`redisAclCategories` and `redisAclKeys`. This property cannot be changed, doing so forces recreation of the resource.
     */
    redisAclCommands?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Redis specific field, defines key access rules. The field is required with`redisAclCategories` and `redisAclKeys`. This property cannot be changed, doing so forces recreation of the resource.
     */
    redisAclKeys?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    serviceName: pulumi.Input<string>;
    /**
     * The actual name of the service user. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    username: pulumi.Input<string>;
}
