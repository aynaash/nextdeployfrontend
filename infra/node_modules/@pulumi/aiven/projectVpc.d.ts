import * as pulumi from "@pulumi/pulumi";
/**
 * The Project VPC resource allows the creation and management of Aiven Project VPCs.
 *
 * ## Import
 *
 * ```sh
 *  $ pulumi import aiven:index/projectVpc:ProjectVpc myvpc project/id
 * ```
 */
export declare class ProjectVpc extends pulumi.CustomResource {
    /**
     * Get an existing ProjectVpc resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ProjectVpcState, opts?: pulumi.CustomResourceOptions): ProjectVpc;
    /**
     * Returns true if the given object is an instance of ProjectVpc.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ProjectVpc;
    /**
     * Defines where the cloud provider and region where the service is hosted in. See the Service resource for additional information. This property cannot be changed, doing so forces recreation of the resource.
     */
    readonly cloudName: pulumi.Output<string>;
    /**
     * Network address range used by the VPC like 192.168.0.0/24
     */
    readonly networkCidr: pulumi.Output<string>;
    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    readonly project: pulumi.Output<string>;
    /**
     * State of the VPC. The possible values are `APPROVED`, `ACTIVE`, `DELETING` and `DELETED`.
     */
    readonly state: pulumi.Output<string>;
    /**
     * Create a ProjectVpc resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ProjectVpcArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ProjectVpc resources.
 */
export interface ProjectVpcState {
    /**
     * Defines where the cloud provider and region where the service is hosted in. See the Service resource for additional information. This property cannot be changed, doing so forces recreation of the resource.
     */
    cloudName?: pulumi.Input<string>;
    /**
     * Network address range used by the VPC like 192.168.0.0/24
     */
    networkCidr?: pulumi.Input<string>;
    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    project?: pulumi.Input<string>;
    /**
     * State of the VPC. The possible values are `APPROVED`, `ACTIVE`, `DELETING` and `DELETED`.
     */
    state?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a ProjectVpc resource.
 */
export interface ProjectVpcArgs {
    /**
     * Defines where the cloud provider and region where the service is hosted in. See the Service resource for additional information. This property cannot be changed, doing so forces recreation of the resource.
     */
    cloudName: pulumi.Input<string>;
    /**
     * Network address range used by the VPC like 192.168.0.0/24
     */
    networkCidr: pulumi.Input<string>;
    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    project: pulumi.Input<string>;
}
