"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getMirrorMakerReplicationFlowOutput = exports.getMirrorMakerReplicationFlow = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * The MirrorMaker 2 Replication Flow data source provides information about the existing MirrorMaker 2 Replication Flow on Aiven Cloud.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aiven from "@pulumi/aiven";
 *
 * const f1 = aiven.getMirrorMakerReplicationFlow({
 *     project: aiven_project["kafka-mm-project1"].project,
 *     serviceName: aiven_kafka.mm.service_name,
 *     sourceCluster: aiven_kafka.source.service_name,
 *     targetCluster: aiven_kafka.target.service_name,
 * });
 * ```
 */
function getMirrorMakerReplicationFlow(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aiven:index/getMirrorMakerReplicationFlow:getMirrorMakerReplicationFlow", {
        "project": args.project,
        "serviceName": args.serviceName,
        "sourceCluster": args.sourceCluster,
        "targetCluster": args.targetCluster,
    }, opts);
}
exports.getMirrorMakerReplicationFlow = getMirrorMakerReplicationFlow;
/**
 * The MirrorMaker 2 Replication Flow data source provides information about the existing MirrorMaker 2 Replication Flow on Aiven Cloud.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aiven from "@pulumi/aiven";
 *
 * const f1 = aiven.getMirrorMakerReplicationFlow({
 *     project: aiven_project["kafka-mm-project1"].project,
 *     serviceName: aiven_kafka.mm.service_name,
 *     sourceCluster: aiven_kafka.source.service_name,
 *     targetCluster: aiven_kafka.target.service_name,
 * });
 * ```
 */
function getMirrorMakerReplicationFlowOutput(args, opts) {
    return pulumi.output(args).apply((a) => getMirrorMakerReplicationFlow(a, opts));
}
exports.getMirrorMakerReplicationFlowOutput = getMirrorMakerReplicationFlowOutput;
//# sourceMappingURL=getMirrorMakerReplicationFlow.js.map