"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getKafkaMirrorMakerOutput = exports.getKafkaMirrorMaker = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * The Kafka MirrorMaker data source provides information about the existing Aiven Kafka MirrorMaker 2 service.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aiven from "@pulumi/aiven";
 *
 * const mm1 = aiven.getKafkaMirrorMaker({
 *     project: data.aiven_project.pr1.project,
 *     serviceName: "my-mm1",
 * });
 * ```
 */
function getKafkaMirrorMaker(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aiven:index/getKafkaMirrorMaker:getKafkaMirrorMaker", {
        "project": args.project,
        "serviceName": args.serviceName,
    }, opts);
}
exports.getKafkaMirrorMaker = getKafkaMirrorMaker;
/**
 * The Kafka MirrorMaker data source provides information about the existing Aiven Kafka MirrorMaker 2 service.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aiven from "@pulumi/aiven";
 *
 * const mm1 = aiven.getKafkaMirrorMaker({
 *     project: data.aiven_project.pr1.project,
 *     serviceName: "my-mm1",
 * });
 * ```
 */
function getKafkaMirrorMakerOutput(args, opts) {
    return pulumi.output(args).apply((a) => getKafkaMirrorMaker(a, opts));
}
exports.getKafkaMirrorMakerOutput = getKafkaMirrorMakerOutput;
//# sourceMappingURL=getKafkaMirrorMaker.js.map