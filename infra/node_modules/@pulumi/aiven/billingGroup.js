"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.BillingGroup = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * The Billing Group resource allows the creation and management of Aiven Billing Groups and association with the Projects.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aiven from "@pulumi/aiven";
 *
 * const bybg1 = new aiven.BillingGroup("bybg1", {
 *     billingCurrency: "USD",
 *     vatId: "123ABC",
 * });
 * const pr1 = new aiven.Project("pr1", {
 *     project: "pr1",
 *     billingGroup: bybg1.id,
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 *  $ pulumi import aiven:index/billingGroup:BillingGroup bybg1 id
 * ```
 */
class BillingGroup extends pulumi.CustomResource {
    /**
     * Get an existing BillingGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new BillingGroup(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of BillingGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BillingGroup.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["addressLines"] = state ? state.addressLines : undefined;
            resourceInputs["billingCurrency"] = state ? state.billingCurrency : undefined;
            resourceInputs["billingEmails"] = state ? state.billingEmails : undefined;
            resourceInputs["billingExtraText"] = state ? state.billingExtraText : undefined;
            resourceInputs["cardId"] = state ? state.cardId : undefined;
            resourceInputs["city"] = state ? state.city : undefined;
            resourceInputs["company"] = state ? state.company : undefined;
            resourceInputs["copyFromBillingGroup"] = state ? state.copyFromBillingGroup : undefined;
            resourceInputs["countryCode"] = state ? state.countryCode : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["vatId"] = state ? state.vatId : undefined;
            resourceInputs["zipCode"] = state ? state.zipCode : undefined;
        }
        else {
            const args = argsOrState;
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["addressLines"] = args ? args.addressLines : undefined;
            resourceInputs["billingCurrency"] = args ? args.billingCurrency : undefined;
            resourceInputs["billingEmails"] = args ? args.billingEmails : undefined;
            resourceInputs["billingExtraText"] = args ? args.billingExtraText : undefined;
            resourceInputs["cardId"] = args ? args.cardId : undefined;
            resourceInputs["city"] = args ? args.city : undefined;
            resourceInputs["company"] = args ? args.company : undefined;
            resourceInputs["copyFromBillingGroup"] = args ? args.copyFromBillingGroup : undefined;
            resourceInputs["countryCode"] = args ? args.countryCode : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["state"] = args ? args.state : undefined;
            resourceInputs["vatId"] = args ? args.vatId : undefined;
            resourceInputs["zipCode"] = args ? args.zipCode : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BillingGroup.__pulumiType, name, resourceInputs, opts);
    }
}
exports.BillingGroup = BillingGroup;
/** @internal */
BillingGroup.__pulumiType = 'aiven:index/billingGroup:BillingGroup';
//# sourceMappingURL=billingGroup.js.map