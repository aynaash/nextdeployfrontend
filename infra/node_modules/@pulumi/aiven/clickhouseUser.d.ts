import * as pulumi from "@pulumi/pulumi";
/**
 * The Clickhouse User resource allows the creation and management of Aiven Clikhouse Users.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aiven from "@pulumi/aiven";
 *
 * const ch_user = new aiven.ClickhouseUser("ch-user", {
 *     project: aiven_project.myproject.project,
 *     serviceName: aiven_clickhouse.myservice.service_name,
 *     username: "<USERNAME>",
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 *  $ pulumi import aiven:index/clickhouseUser:ClickhouseUser ch-user project/service_name/id
 * ```
 */
export declare class ClickhouseUser extends pulumi.CustomResource {
    /**
     * Get an existing ClickhouseUser resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ClickhouseUserState, opts?: pulumi.CustomResourceOptions): ClickhouseUser;
    /**
     * Returns true if the given object is an instance of ClickhouseUser.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ClickhouseUser;
    /**
     * The password of the clickhouse user.
     */
    readonly password: pulumi.Output<string>;
    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    readonly project: pulumi.Output<string>;
    /**
     * Indicates if a clickhouse user is required
     */
    readonly required: pulumi.Output<boolean>;
    /**
     * Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    readonly serviceName: pulumi.Output<string>;
    /**
     * The actual name of the Clickhouse user. This property cannot be changed, doing so forces recreation of the resource.
     */
    readonly username: pulumi.Output<string>;
    /**
     * UUID of the clickhouse user.
     */
    readonly uuid: pulumi.Output<string>;
    /**
     * Create a ClickhouseUser resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ClickhouseUserArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ClickhouseUser resources.
 */
export interface ClickhouseUserState {
    /**
     * The password of the clickhouse user.
     */
    password?: pulumi.Input<string>;
    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    project?: pulumi.Input<string>;
    /**
     * Indicates if a clickhouse user is required
     */
    required?: pulumi.Input<boolean>;
    /**
     * Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    serviceName?: pulumi.Input<string>;
    /**
     * The actual name of the Clickhouse user. This property cannot be changed, doing so forces recreation of the resource.
     */
    username?: pulumi.Input<string>;
    /**
     * UUID of the clickhouse user.
     */
    uuid?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a ClickhouseUser resource.
 */
export interface ClickhouseUserArgs {
    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    project: pulumi.Input<string>;
    /**
     * Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    serviceName: pulumi.Input<string>;
    /**
     * The actual name of the Clickhouse user. This property cannot be changed, doing so forces recreation of the resource.
     */
    username: pulumi.Input<string>;
}
