import * as pulumi from "@pulumi/pulumi";
import * as outputs from "./types/output";
/**
 * The Service Integration Endpoint data source provides information about the existing Aiven Service Integration Endpoint.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aiven from "@pulumi/aiven";
 *
 * const myendpoint = aiven.getServiceIntegrationEndpoint({
 *     project: aiven_project.myproject.project,
 *     endpointName: "<ENDPOINT_NAME>",
 * });
 * ```
 */
export declare function getServiceIntegrationEndpoint(args: GetServiceIntegrationEndpointArgs, opts?: pulumi.InvokeOptions): Promise<GetServiceIntegrationEndpointResult>;
/**
 * A collection of arguments for invoking getServiceIntegrationEndpoint.
 */
export interface GetServiceIntegrationEndpointArgs {
    /**
     * Name of the service integration endpoint
     */
    endpointName: string;
    /**
     * Project the service integration endpoint belongs to
     */
    project: string;
}
/**
 * A collection of values returned by getServiceIntegrationEndpoint.
 */
export interface GetServiceIntegrationEndpointResult {
    /**
     * Datadog user configurable settings
     */
    readonly datadogUserConfigs: outputs.GetServiceIntegrationEndpointDatadogUserConfig[];
    /**
     * Integration endpoint specific backend configuration
     */
    readonly endpointConfig: {
        [key: string]: string;
    };
    /**
     * Name of the service integration endpoint
     */
    readonly endpointName: string;
    /**
     * Type of the service integration endpoint
     */
    readonly endpointType: string;
    /**
     * ExternalAwsCloudwatchLogs user configurable settings
     */
    readonly externalAwsCloudwatchLogsUserConfigs: outputs.GetServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig[];
    /**
     * ExternalAwsCloudwatchMetrics user configurable settings
     */
    readonly externalAwsCloudwatchMetricsUserConfigs: outputs.GetServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig[];
    /**
     * ExternalElasticsearchLogs user configurable settings
     */
    readonly externalElasticsearchLogsUserConfigs: outputs.GetServiceIntegrationEndpointExternalElasticsearchLogsUserConfig[];
    /**
     * ExternalGoogleCloudLogging user configurable settings
     */
    readonly externalGoogleCloudLoggingUserConfigs: outputs.GetServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig[];
    /**
     * ExternalKafka user configurable settings
     */
    readonly externalKafkaUserConfigs: outputs.GetServiceIntegrationEndpointExternalKafkaUserConfig[];
    /**
     * ExternalOpensearchLogs user configurable settings
     */
    readonly externalOpensearchLogsUserConfigs: outputs.GetServiceIntegrationEndpointExternalOpensearchLogsUserConfig[];
    /**
     * ExternalSchemaRegistry user configurable settings
     */
    readonly externalSchemaRegistryUserConfigs: outputs.GetServiceIntegrationEndpointExternalSchemaRegistryUserConfig[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Jolokia user configurable settings
     */
    readonly jolokiaUserConfigs: outputs.GetServiceIntegrationEndpointJolokiaUserConfig[];
    /**
     * Project the service integration endpoint belongs to
     */
    readonly project: string;
    /**
     * Prometheus user configurable settings
     */
    readonly prometheusUserConfigs: outputs.GetServiceIntegrationEndpointPrometheusUserConfig[];
    /**
     * Rsyslog user configurable settings
     */
    readonly rsyslogUserConfigs: outputs.GetServiceIntegrationEndpointRsyslogUserConfig[];
    /**
     * Signalfx user configurable settings
     */
    readonly signalfxUserConfigs: outputs.GetServiceIntegrationEndpointSignalfxUserConfig[];
}
/**
 * The Service Integration Endpoint data source provides information about the existing Aiven Service Integration Endpoint.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aiven from "@pulumi/aiven";
 *
 * const myendpoint = aiven.getServiceIntegrationEndpoint({
 *     project: aiven_project.myproject.project,
 *     endpointName: "<ENDPOINT_NAME>",
 * });
 * ```
 */
export declare function getServiceIntegrationEndpointOutput(args: GetServiceIntegrationEndpointOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServiceIntegrationEndpointResult>;
/**
 * A collection of arguments for invoking getServiceIntegrationEndpoint.
 */
export interface GetServiceIntegrationEndpointOutputArgs {
    /**
     * Name of the service integration endpoint
     */
    endpointName: pulumi.Input<string>;
    /**
     * Project the service integration endpoint belongs to
     */
    project: pulumi.Input<string>;
}
