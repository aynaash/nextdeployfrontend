import * as pulumi from "@pulumi/pulumi";
/**
 * The Opensearch User data source provides information about the existing Aiven Cassandra User.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aiven from "@pulumi/aiven";
 *
 * const user = aiven.getOpensearchUser({
 *     project: "my-project",
 *     serviceName: "my-service",
 *     username: "user1",
 * });
 * ```
 */
export declare function getOpensearchUser(args: GetOpensearchUserArgs, opts?: pulumi.InvokeOptions): Promise<GetOpensearchUserResult>;
/**
 * A collection of arguments for invoking getOpensearchUser.
 */
export interface GetOpensearchUserArgs {
    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    project: string;
    /**
     * Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    serviceName: string;
    /**
     * The actual name of the Opensearch User. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    username: string;
}
/**
 * A collection of values returned by getOpensearchUser.
 */
export interface GetOpensearchUserResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The password of the Opensearch User.
     */
    readonly password: string;
    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    readonly project: string;
    /**
     * Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    readonly serviceName: string;
    /**
     * Type of the user account. Tells whether the user is the primary account or a regular account.
     */
    readonly type: string;
    /**
     * The actual name of the Opensearch User. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    readonly username: string;
}
/**
 * The Opensearch User data source provides information about the existing Aiven Cassandra User.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aiven from "@pulumi/aiven";
 *
 * const user = aiven.getOpensearchUser({
 *     project: "my-project",
 *     serviceName: "my-service",
 *     username: "user1",
 * });
 * ```
 */
export declare function getOpensearchUserOutput(args: GetOpensearchUserOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOpensearchUserResult>;
/**
 * A collection of arguments for invoking getOpensearchUser.
 */
export interface GetOpensearchUserOutputArgs {
    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    project: pulumi.Input<string>;
    /**
     * Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    serviceName: pulumi.Input<string>;
    /**
     * The actual name of the Opensearch User. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    username: pulumi.Input<string>;
}
