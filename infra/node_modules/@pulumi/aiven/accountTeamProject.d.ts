import * as pulumi from "@pulumi/pulumi";
/**
 * The Account Team Project resource allows the creation and management of an Account Team Project.
 *
 * It is intended to link an existing project to the existing account team.
 * It is important to note that the project should have an `accountId` property set equal to the
 * account team you are trying to link to this project.
 *
 * ## Import
 *
 * ```sh
 *  $ pulumi import aiven:index/accountTeamProject:AccountTeamProject account_team_project1 account_id/team_id/project_name
 * ```
 */
export declare class AccountTeamProject extends pulumi.CustomResource {
    /**
     * Get an existing AccountTeamProject resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AccountTeamProjectState, opts?: pulumi.CustomResourceOptions): AccountTeamProject;
    /**
     * Returns true if the given object is an instance of AccountTeamProject.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is AccountTeamProject;
    /**
     * The unique account id
     */
    readonly accountId: pulumi.Output<string>;
    /**
     * The name of an already existing project
     */
    readonly projectName: pulumi.Output<string | undefined>;
    /**
     * An account team id
     */
    readonly teamId: pulumi.Output<string>;
    /**
     * The Account team project type The possible values are `admin`, `developer`, `operator` and `readOnly`.
     */
    readonly teamType: pulumi.Output<string | undefined>;
    /**
     * Create a AccountTeamProject resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AccountTeamProjectArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering AccountTeamProject resources.
 */
export interface AccountTeamProjectState {
    /**
     * The unique account id
     */
    accountId?: pulumi.Input<string>;
    /**
     * The name of an already existing project
     */
    projectName?: pulumi.Input<string>;
    /**
     * An account team id
     */
    teamId?: pulumi.Input<string>;
    /**
     * The Account team project type The possible values are `admin`, `developer`, `operator` and `readOnly`.
     */
    teamType?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a AccountTeamProject resource.
 */
export interface AccountTeamProjectArgs {
    /**
     * The unique account id
     */
    accountId: pulumi.Input<string>;
    /**
     * The name of an already existing project
     */
    projectName?: pulumi.Input<string>;
    /**
     * An account team id
     */
    teamId: pulumi.Input<string>;
    /**
     * The Account team project type The possible values are `admin`, `developer`, `operator` and `readOnly`.
     */
    teamType?: pulumi.Input<string>;
}
