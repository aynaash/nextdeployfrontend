import * as pulumi from "@pulumi/pulumi";
/**
 * The Project User resource allows the creation and management of Aiven Project Users.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aiven from "@pulumi/aiven";
 *
 * const mytestuser = new aiven.ProjectUser("mytestuser", {
 *     project: aiven_project.myproject.project,
 *     email: "john.doe@example.com",
 *     memberType: "admin",
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 *  $ pulumi import aiven:index/projectUser:ProjectUser mytestuser project/email
 * ```
 */
export declare class ProjectUser extends pulumi.CustomResource {
    /**
     * Get an existing ProjectUser resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ProjectUserState, opts?: pulumi.CustomResourceOptions): ProjectUser;
    /**
     * Returns true if the given object is an instance of ProjectUser.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ProjectUser;
    /**
     * Whether the user has accepted the request to join the project; adding user to a project sends an invitation to the target user and the actual membership is only created once the user accepts the invitation.
     */
    readonly accepted: pulumi.Output<boolean>;
    /**
     * Email address of the user. This property cannot be changed, doing so forces recreation of the resource.
     */
    readonly email: pulumi.Output<string>;
    /**
     * Project membership type. The possible values are `admin`, `developer` and `operator`.
     */
    readonly memberType: pulumi.Output<string>;
    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    readonly project: pulumi.Output<string>;
    /**
     * Create a ProjectUser resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ProjectUserArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ProjectUser resources.
 */
export interface ProjectUserState {
    /**
     * Whether the user has accepted the request to join the project; adding user to a project sends an invitation to the target user and the actual membership is only created once the user accepts the invitation.
     */
    accepted?: pulumi.Input<boolean>;
    /**
     * Email address of the user. This property cannot be changed, doing so forces recreation of the resource.
     */
    email?: pulumi.Input<string>;
    /**
     * Project membership type. The possible values are `admin`, `developer` and `operator`.
     */
    memberType?: pulumi.Input<string>;
    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    project?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a ProjectUser resource.
 */
export interface ProjectUserArgs {
    /**
     * Email address of the user. This property cannot be changed, doing so forces recreation of the resource.
     */
    email: pulumi.Input<string>;
    /**
     * Project membership type. The possible values are `admin`, `developer` and `operator`.
     */
    memberType: pulumi.Input<string>;
    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    project: pulumi.Input<string>;
}
