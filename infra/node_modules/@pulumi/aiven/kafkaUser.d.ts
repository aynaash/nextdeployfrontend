import * as pulumi from "@pulumi/pulumi";
/**
 * The Kafka User resource allows the creation and management of Aiven Kafka Users.
 */
export declare class KafkaUser extends pulumi.CustomResource {
    /**
     * Get an existing KafkaUser resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: KafkaUserState, opts?: pulumi.CustomResourceOptions): KafkaUser;
    /**
     * Returns true if the given object is an instance of KafkaUser.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is KafkaUser;
    /**
     * Access certificate for the user
     */
    readonly accessCert: pulumi.Output<string>;
    /**
     * Access certificate key for the user
     */
    readonly accessKey: pulumi.Output<string>;
    /**
     * The password of the Kafka User.
     */
    readonly password: pulumi.Output<string>;
    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    readonly project: pulumi.Output<string>;
    /**
     * Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    readonly serviceName: pulumi.Output<string>;
    /**
     * Type of the user account. Tells whether the user is the primary account or a regular account.
     */
    readonly type: pulumi.Output<string>;
    /**
     * The actual name of the Kafka User. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    readonly username: pulumi.Output<string>;
    /**
     * Create a KafkaUser resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: KafkaUserArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering KafkaUser resources.
 */
export interface KafkaUserState {
    /**
     * Access certificate for the user
     */
    accessCert?: pulumi.Input<string>;
    /**
     * Access certificate key for the user
     */
    accessKey?: pulumi.Input<string>;
    /**
     * The password of the Kafka User.
     */
    password?: pulumi.Input<string>;
    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    project?: pulumi.Input<string>;
    /**
     * Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    serviceName?: pulumi.Input<string>;
    /**
     * Type of the user account. Tells whether the user is the primary account or a regular account.
     */
    type?: pulumi.Input<string>;
    /**
     * The actual name of the Kafka User. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    username?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a KafkaUser resource.
 */
export interface KafkaUserArgs {
    /**
     * The password of the Kafka User.
     */
    password?: pulumi.Input<string>;
    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    project: pulumi.Input<string>;
    /**
     * Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    serviceName: pulumi.Input<string>;
    /**
     * The actual name of the Kafka User. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    username: pulumi.Input<string>;
}
