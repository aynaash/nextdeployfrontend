import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
/**
 * The Account Authentication resource allows the creation and management of an Aiven Account Authentications.
 *
 * ## Import
 *
 * ```sh
 *  $ pulumi import aiven:index/accountAuthentication:AccountAuthentication foo account_id/authentication_id
 * ```
 */
export declare class AccountAuthentication extends pulumi.CustomResource {
    /**
     * Get an existing AccountAuthentication resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AccountAuthenticationState, opts?: pulumi.CustomResourceOptions): AccountAuthentication;
    /**
     * Returns true if the given object is an instance of AccountAuthentication.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is AccountAuthentication;
    /**
     * The unique id of the account.
     */
    readonly accountId: pulumi.Output<string>;
    /**
     * Account authentication id
     */
    readonly authenticationId: pulumi.Output<string>;
    /**
     * Team ID
     */
    readonly autoJoinTeamId: pulumi.Output<string | undefined>;
    /**
     * Time of creation
     */
    readonly createTime: pulumi.Output<string>;
    /**
     * Status of account authentication method. The default value is `false`.
     */
    readonly enabled: pulumi.Output<boolean | undefined>;
    /**
     * The name of the account authentication.
     */
    readonly name: pulumi.Output<string>;
    /**
     * SAML Assertion Consumer Service URL
     */
    readonly samlAcsUrl: pulumi.Output<string>;
    /**
     * SAML Certificate
     */
    readonly samlCertificate: pulumi.Output<string | undefined>;
    /**
     * Digest algorithm. This is an advanced option that typically does not need to be set.
     */
    readonly samlDigestAlgorithm: pulumi.Output<string | undefined>;
    /**
     * SAML Entity id
     */
    readonly samlEntityId: pulumi.Output<string | undefined>;
    /**
     * Map IdP fields
     */
    readonly samlFieldMapping: pulumi.Output<outputs.AccountAuthenticationSamlFieldMapping | undefined>;
    /**
     * Set to 'true' to enable IdP initiated login
     */
    readonly samlIdpLoginAllowed: pulumi.Output<boolean | undefined>;
    /**
     * SAML Idp URL
     */
    readonly samlIdpUrl: pulumi.Output<string | undefined>;
    /**
     * SAML Metadata URL
     */
    readonly samlMetadataUrl: pulumi.Output<string>;
    /**
     * Signature algorithm. This is an advanced option that typically does not need to be set.
     */
    readonly samlSignatureAlgorithm: pulumi.Output<string | undefined>;
    /**
     * SAML server variant
     */
    readonly samlVariant: pulumi.Output<string | undefined>;
    /**
     * The account authentication type. The possible values are `internal` and `saml`.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Time of last update
     */
    readonly updateTime: pulumi.Output<string>;
    /**
     * Create a AccountAuthentication resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AccountAuthenticationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering AccountAuthentication resources.
 */
export interface AccountAuthenticationState {
    /**
     * The unique id of the account.
     */
    accountId?: pulumi.Input<string>;
    /**
     * Account authentication id
     */
    authenticationId?: pulumi.Input<string>;
    /**
     * Team ID
     */
    autoJoinTeamId?: pulumi.Input<string>;
    /**
     * Time of creation
     */
    createTime?: pulumi.Input<string>;
    /**
     * Status of account authentication method. The default value is `false`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The name of the account authentication.
     */
    name?: pulumi.Input<string>;
    /**
     * SAML Assertion Consumer Service URL
     */
    samlAcsUrl?: pulumi.Input<string>;
    /**
     * SAML Certificate
     */
    samlCertificate?: pulumi.Input<string>;
    /**
     * Digest algorithm. This is an advanced option that typically does not need to be set.
     */
    samlDigestAlgorithm?: pulumi.Input<string>;
    /**
     * SAML Entity id
     */
    samlEntityId?: pulumi.Input<string>;
    /**
     * Map IdP fields
     */
    samlFieldMapping?: pulumi.Input<inputs.AccountAuthenticationSamlFieldMapping>;
    /**
     * Set to 'true' to enable IdP initiated login
     */
    samlIdpLoginAllowed?: pulumi.Input<boolean>;
    /**
     * SAML Idp URL
     */
    samlIdpUrl?: pulumi.Input<string>;
    /**
     * SAML Metadata URL
     */
    samlMetadataUrl?: pulumi.Input<string>;
    /**
     * Signature algorithm. This is an advanced option that typically does not need to be set.
     */
    samlSignatureAlgorithm?: pulumi.Input<string>;
    /**
     * SAML server variant
     */
    samlVariant?: pulumi.Input<string>;
    /**
     * The account authentication type. The possible values are `internal` and `saml`.
     */
    type?: pulumi.Input<string>;
    /**
     * Time of last update
     */
    updateTime?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a AccountAuthentication resource.
 */
export interface AccountAuthenticationArgs {
    /**
     * The unique id of the account.
     */
    accountId: pulumi.Input<string>;
    /**
     * Team ID
     */
    autoJoinTeamId?: pulumi.Input<string>;
    /**
     * Status of account authentication method. The default value is `false`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The name of the account authentication.
     */
    name?: pulumi.Input<string>;
    /**
     * SAML Certificate
     */
    samlCertificate?: pulumi.Input<string>;
    /**
     * Digest algorithm. This is an advanced option that typically does not need to be set.
     */
    samlDigestAlgorithm?: pulumi.Input<string>;
    /**
     * SAML Entity id
     */
    samlEntityId?: pulumi.Input<string>;
    /**
     * Map IdP fields
     */
    samlFieldMapping?: pulumi.Input<inputs.AccountAuthenticationSamlFieldMapping>;
    /**
     * Set to 'true' to enable IdP initiated login
     */
    samlIdpLoginAllowed?: pulumi.Input<boolean>;
    /**
     * SAML Idp URL
     */
    samlIdpUrl?: pulumi.Input<string>;
    /**
     * Signature algorithm. This is an advanced option that typically does not need to be set.
     */
    samlSignatureAlgorithm?: pulumi.Input<string>;
    /**
     * SAML server variant
     */
    samlVariant?: pulumi.Input<string>;
    /**
     * The account authentication type. The possible values are `internal` and `saml`.
     */
    type: pulumi.Input<string>;
}
