"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.AccountTeamMember = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * The Account Team Member resource allows the creation and management of an Aiven Account Team Member.
 *
 * During the creation of `aiven.AccountTeamMember`resource, an email invitation will be sent
 * to a user using `userEmail` address. If the user accepts an invitation, he or she will become
 * a member of the account team. The deletion of `aiven.AccountTeamMember` will not only
 * delete the invitation if one was sent but not yet accepted by the user, it will also
 * eliminate an account team member if one has accepted an invitation previously.
 *
 * ## Import
 *
 * ```sh
 *  $ pulumi import aiven:index/accountTeamMember:AccountTeamMember foo account_id/team_id/user_email
 * ```
 */
class AccountTeamMember extends pulumi.CustomResource {
    /**
     * Get an existing AccountTeamMember resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new AccountTeamMember(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of AccountTeamMember.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AccountTeamMember.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["accepted"] = state ? state.accepted : undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["invitedByUserEmail"] = state ? state.invitedByUserEmail : undefined;
            resourceInputs["teamId"] = state ? state.teamId : undefined;
            resourceInputs["userEmail"] = state ? state.userEmail : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.accountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            if ((!args || args.teamId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'teamId'");
            }
            if ((!args || args.userEmail === undefined) && !opts.urn) {
                throw new Error("Missing required property 'userEmail'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["teamId"] = args ? args.teamId : undefined;
            resourceInputs["userEmail"] = args ? args.userEmail : undefined;
            resourceInputs["accepted"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["invitedByUserEmail"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AccountTeamMember.__pulumiType, name, resourceInputs, opts);
    }
}
exports.AccountTeamMember = AccountTeamMember;
/** @internal */
AccountTeamMember.__pulumiType = 'aiven:index/accountTeamMember:AccountTeamMember';
//# sourceMappingURL=accountTeamMember.js.map