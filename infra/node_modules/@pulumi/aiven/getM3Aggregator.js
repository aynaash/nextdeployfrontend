"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getM3AggregatorOutput = exports.getM3Aggregator = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * The M3 Aggregator data source provides information about the existing Aiven M3 Aggregator.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aiven from "@pulumi/aiven";
 *
 * const m3a = aiven.getM3Aggregator({
 *     project: data.aiven_project.foo.project,
 *     serviceName: "my-m3a",
 * });
 * ```
 */
function getM3Aggregator(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aiven:index/getM3Aggregator:getM3Aggregator", {
        "project": args.project,
        "serviceName": args.serviceName,
    }, opts);
}
exports.getM3Aggregator = getM3Aggregator;
/**
 * The M3 Aggregator data source provides information about the existing Aiven M3 Aggregator.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aiven from "@pulumi/aiven";
 *
 * const m3a = aiven.getM3Aggregator({
 *     project: data.aiven_project.foo.project,
 *     serviceName: "my-m3a",
 * });
 * ```
 */
function getM3AggregatorOutput(args, opts) {
    return pulumi.output(args).apply((a) => getM3Aggregator(a, opts));
}
exports.getM3AggregatorOutput = getM3AggregatorOutput;
//# sourceMappingURL=getM3Aggregator.js.map