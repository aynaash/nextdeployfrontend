import * as pulumi from "@pulumi/pulumi";
/**
 * The Clickhouse Database resource allows the creation and management of Aiven Clickhouse Databases.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aiven from "@pulumi/aiven";
 *
 * const clickhouseDb = new aiven.ClickhouseDatabase("clickhouseDb", {
 *     project: aiven_clickhouse.ch.project,
 *     serviceName: aiven_clickhouse.ch.service_name,
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 *  $ pulumi import aiven:index/clickhouseDatabase:ClickhouseDatabase clickhouse_db project/service_name/name
 * ```
 */
export declare class ClickhouseDatabase extends pulumi.CustomResource {
    /**
     * Get an existing ClickhouseDatabase resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ClickhouseDatabaseState, opts?: pulumi.CustomResourceOptions): ClickhouseDatabase;
    /**
     * Returns true if the given object is an instance of ClickhouseDatabase.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ClickhouseDatabase;
    /**
     * The name of the Clickhouse database. This property cannot be changed, doing so forces recreation of the resource.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    readonly project: pulumi.Output<string>;
    /**
     * Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    readonly serviceName: pulumi.Output<string>;
    /**
     * It is a Terraform client-side deletion protections, which prevents the Clickhouse database from being deleted by
     * Terraform. It is recommended to enable this for any production Clickhouse databases containing critical data. The
     * default value is `false`.
     */
    readonly terminationProtection: pulumi.Output<boolean | undefined>;
    /**
     * Create a ClickhouseDatabase resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ClickhouseDatabaseArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ClickhouseDatabase resources.
 */
export interface ClickhouseDatabaseState {
    /**
     * The name of the Clickhouse database. This property cannot be changed, doing so forces recreation of the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    project?: pulumi.Input<string>;
    /**
     * Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    serviceName?: pulumi.Input<string>;
    /**
     * It is a Terraform client-side deletion protections, which prevents the Clickhouse database from being deleted by
     * Terraform. It is recommended to enable this for any production Clickhouse databases containing critical data. The
     * default value is `false`.
     */
    terminationProtection?: pulumi.Input<boolean>;
}
/**
 * The set of arguments for constructing a ClickhouseDatabase resource.
 */
export interface ClickhouseDatabaseArgs {
    /**
     * The name of the Clickhouse database. This property cannot be changed, doing so forces recreation of the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    project: pulumi.Input<string>;
    /**
     * Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
     */
    serviceName: pulumi.Input<string>;
    /**
     * It is a Terraform client-side deletion protections, which prevents the Clickhouse database from being deleted by
     * Terraform. It is recommended to enable this for any production Clickhouse databases containing critical data. The
     * default value is `false`.
     */
    terminationProtection?: pulumi.Input<boolean>;
}
